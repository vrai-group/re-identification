#!/usr/bin/python

import MySQLdb
import os,sys
import numpy as np
import argparse
from primesense import openni2
import cv2
import csv
import string,re

# Open database connection
db=MySQLdb.connect(passwd="",db="reidentification",host="127.0.0.1",user="root")




def split(video_path):
        """
        Split the ONI file into RGB and depth maps and shows using two separate windows
        @param video_path: contains the ONI file path
        """
        openni2.initialize()
        dev = openni2.Device.open_file(video_path)
        print (dev.get_sensor_info(openni2.SENSOR_DEPTH))
        depth_stream = dev.create_depth_stream()
        color_stream = dev.create_color_stream()
        depth_stream.start()
        color_stream.start()
        #####obtains Video id####################
        # prepare a cursor object using cursor() method
        cursor = db.cursor()
        query ="SELECT COUNT(*) from VIDEO"
        cursor.execute(query)             #execute query separately
        res=cursor.fetchone()
        total_rows=res[0]
        videoid=total_rows+1
        #populates VIDEO table####################
        sql = """INSERT INTO VIDEO(VIDEOID,
         VIDEO)
         VALUES (%s, %s)"""
        data=(videoid,video_path)

        try:
           # Execute the SQL command
           cursor.execute(sql,data)
           # Commit your changes in the database
           db.commit()
        except:
           # Rollback in case there is any error
           db.rollback()
        ###########################################
        person_id=video_path[:-4]
        ####getting person info #############
        with open('id.csv', 'rb') as gt_file:
                reader = csv.reader(gt_file,delimiter='\t')
                for row in reader:
                   if row[0]== person_id :
                           name = row[1]
                           surname = row[2:]
        gt_file.close()
        ###checking if surname has two words #########
        if (len(surname) == 1):
                 surname = surname[0]
        else:
                 surname = surname[0]+' '+surname[1]

        with open('gt.csv', 'rb') as gt_file:
                reader = csv.reader(gt_file,delimiter=';')
                for row in reader:
                  height=int(row[0])
                  pelvis=int(row[1])
                  gender=row[2]
                  head_shoulder=int(row[3])
                  shoulder_widht=int(row[4])
                  shoulder_contour=int(row[5])
                  head_contour=int(row[6])
        gt_file.close()
        #populates PERSON table####################
        sql = """INSERT INTO PERSON(PERSONID,PRIVATE_NAME,PRIVATE_SURNAME,PRIVATE_GENDER,HEIGHT,PELVISHEIGHT,HEADSHOULDERSDIFF,
                SHOULDERSWIDTH,SHOULDERSCONTOURLENGTH,HEADCONTOURLENGTH)
         VALUES (%s,%s,%s,%s,%s,%s,%s,%s,%s,%s)"""
        data = (person_id,name,surname,gender,height,pelvis,head_shoulder,shoulder_widht,shoulder_contour,head_contour)
        try:
           # Execute the SQL command
           cursor.execute(sql,data)
           # Commit your changes in the database
           db.commit()
        except:
           # Rollback in case there is any error
           db.rollback()
        ###########################################

        while True:
                frame_depth = depth_stream.read_frame()
                frame_color = color_stream.read_frame()

                frame_depth_data = frame_depth.get_buffer_as_uint16()
                frame_color_data = frame_color.get_buffer_as_uint8()

                depth_array = np.ndarray((frame_depth.height, frame_depth.width), dtype = np.uint16, buffer = frame_depth_data)
                color_array = np.ndarray((frame_color.height, frame_color.width, 3), dtype = np.uint8, buffer = frame_color_data)
                color_array = cv2.cvtColor(color_array, cv2.COLOR_BGR2RGB)

                cv2.imshow("depth", depth_array)
                cv2.imshow("color", color_array)

                ch = 0xFF & cv2.waitKey(1)
                if ch == 27:
                        break

        depth_stream.stop()
        color_stream.stop()
        openni2.unload()
        cv2.destroyAllWindows()
        # disconnect from server
        db.close()


def main():
        """The entry point"""
        p = argparse.ArgumentParser(formatter_class=argparse.RawDescriptionHelpFormatter, description="")
        p.add_argument('--v', dest = 'video_path', action = 'store', default = '', help = 'path file *.oni')
        args = p.parse_args()
        split(args.video_path)

if __name__ == '__main__':
        main()
